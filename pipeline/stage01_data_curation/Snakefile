configfile: "config_IDIBAPS.yaml"

import os
import sys
sys.path.append('../')
from settings import working_dir, output_path

output_path = os.path.join(output_path, 'stage01_curation/')

neo_format = '.nix' # fixed! Do not change!
DATA_SETS = config["DATA_SETS"]
CURATION_SCRIPT = config["CURATION_SCRIPT"]
SPATIAL_SCALE = config['SPATIAL_SCALE']
SAMPLING_RATE = config["SAMPLING_RATE"]
ANNOTATIONS = config["ANNOTATIONS"]
ARRAY_ANNOTATIONS = config["ARRAY_ANNOTATIONS"]
KWARGS = config["KWARGS"]
# ToDo: can we write the curation rule general enough that it can be used
# for any (/most) dataset? Just by changing the configfile

def input_file(wildcards):
    return DATA_SETS[wildcards.data_name]

rule all:
    input:
        expand(os.path.join(output_path, 'output_{name}'+neo_format),
               name = DATA_SETS.keys())

rule curate:
    input:
        data = input_file,
        script = os.path.join('scripts/', CURATION_SCRIPT)
    output:
        data = os.path.join(output_path, 'output_{data_name}'+neo_format)
    params:
        spatial_scale = SPATIAL_SCALE,
        sampling_rate = SAMPLING_RATE,
        annotations = ANNOTATIONS,
        array_annotations = ARRAY_ANNOTATIONS,
        kwargs = KWARGS
    shell:
        """
        python {input.script} --data {input.data} \
                              --output {output.data} \
                              --sampling_rate {params.sampling_rate} \
                              --spatial_scale {params.spatial_scale} \
                              --data_name {wildcards.data_name} \
                              --annotations {params.annotations} \
                              --array_annotations {params.array_annotations} \
                              --kwargs {params.kwargs} \
        """
