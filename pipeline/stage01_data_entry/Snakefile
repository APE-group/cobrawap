# Stage 01 Data Entry

configfile: "config.yaml"
report: "report.rst"

import os
import sys
utils_path = '../'
sys.path.append(utils_path)

from settings import output_path
from utils import ordereddict_to_dict

STAGE_NAME = config["STAGE_NAME"]
STAGE_OUTPUT = config["STAGE_OUTPUT"]
NEO_FORMAT = config["NEO_FORMAT"]
USE_LINK_AS_STAGE_OUTPUT = config["USE_LINK_AS_STAGE_OUTPUT"]
ADD_UTILS = f"export PYTHONPATH='$PYTHONPATH:{utils_path}'"
OUTPUT_DIR = os.path.join(output_path, STAGE_NAME)

PLOT_TSTART = config["PLOT_TSTART"]
PLOT_TSTOP = config["PLOT_TSTOP"]
PLOT_CHANNELS = config["PLOT_CHANNELS"]
PLOT_FORMAT = config["PLOT_FORMAT"]

DATA_SETS = config["DATA_SETS"]
CURATION_SCRIPT = config["CURATION_SCRIPT"]
SPATIAL_SCALE = config['SPATIAL_SCALE']
SAMPLING_RATE = config["SAMPLING_RATE"]
T_START = config["T_START"]
T_STOP = config["T_STOP"]
ANNOTATIONS = ordereddict_to_dict(config["ANNOTATIONS"])
ARRAY_ANNOTATIONS = ordereddict_to_dict(config["ARRAY_ANNOTATIONS"])
KWARGS = ordereddict_to_dict(config["KWARGS"])


def input_file(wildcards):
    return DATA_SETS[wildcards.data_name]

rule all:
    input:
        data = expand(os.path.join(OUTPUT_DIR, '{data_name}.'+NEO_FORMAT),
               data_name = DATA_SETS.keys()),
        check = expand(os.path.join(OUTPUT_DIR, '{data_name}.check'),
               data_name = DATA_SETS.keys())
    params:
        command = 'ln -s' if USE_LINK_AS_STAGE_OUTPUT else 'cp'
    output:
        os.path.join(OUTPUT_DIR, STAGE_OUTPUT)
    shell:
        """
        {params.command} "{input.data[0]}" "{output}"
        """

rule check_input:
    # ToDo!
    input:
        data = os.path.join(OUTPUT_DIR, '{data_name}.'+NEO_FORMAT)
    output:
        temp(os.path.join(OUTPUT_DIR, 'output_{data_name}.check'))
    shell:
        """
        touch "{output}"
        """

rule enter_data:
    input:
        data = input_file,
        script = os.path.join('scripts/', CURATION_SCRIPT),
        plot_script = 'scripts/plot_traces.py'
    output:
        data = os.path.join(OUTPUT_DIR, '{data_name}.'+NEO_FORMAT),
        img = report(os.path.join(OUTPUT_DIR, 'trace_{data_name}.'+PLOT_FORMAT))
    params:
        spatial_scale = SPATIAL_SCALE,
        sampling_rate = SAMPLING_RATE,
        t_start = T_START,
        t_stop = T_STOP,
        annotations = ANNOTATIONS,
        array_annotations = ARRAY_ANNOTATIONS,
        kwargs = KWARGS,
        plot_tstart = PLOT_TSTART,
        plot_tstop = PLOT_TSTOP,
        plot_channels = PLOT_CHANNELS
    shell:
        """
        {ADD_UTILS}
        python {input.script} --data "{input.data}" \
                              --output "{output.data}" \
                              --sampling_rate {params.sampling_rate} \
                              --spatial_scale {params.spatial_scale} \
                              --t_start {params.t_start} \
                              --t_stop {params.t_stop} \
                              --data_name {wildcards.data_name} \
                              --annotations {params.annotations} \
                              --array_annotations {params.array_annotations} \
                              --kwargs {params.kwargs}
        python {input.plot_script} --data "{output.data}" \
                                   --output "{output.img}" \
                                   --t_start {params.plot_tstart} \
                                   --t_stop {params.plot_tstop} \
                                   --channels {params.plot_channels} \
        """
