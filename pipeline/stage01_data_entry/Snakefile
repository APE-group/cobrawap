# Stage 01 Data Entry
import os

# configfile: os.path.join('configs', 'config_template.yaml')
report: "report.rst"

import sys
utils_path = os.path.join('..', 'scripts')
sys.path.append(os.path.join(os.getcwd(), '..'))
sys.path.append(utils_path)

from settings import output_path
from utils import ordereddict_to_dict, get_param

if not bool(config):
    raise KeyError("Please specify a config file with '--configfile=...'")

STAGE_NAME = config["STAGE_NAME"]
STAGE_OUTPUT = config["STAGE_OUTPUT"]
PROFILE = config["PROFILE"]
NEO_FORMAT = config["NEO_FORMAT"]
USE_LINK_AS_STAGE_OUTPUT = config["USE_LINK_AS_STAGE_OUTPUT"]
ADD_UTILS = f"export PYTHONPATH='$PYTHONPATH:{utils_path}'"
OUTPUT_DIR = os.path.join(output_path, PROFILE, STAGE_NAME)

PLOT_TSTART = config["PLOT_TSTART"]
PLOT_TSTOP = config["PLOT_TSTOP"]
PLOT_CHANNELS = config["PLOT_CHANNELS"]
PLOT_FORMAT = config["PLOT_FORMAT"]

DATA_SETS = config["DATA_SETS"]
CURATION_SCRIPT = config["CURATION_SCRIPT"]
SPATIAL_SCALE = config['SPATIAL_SCALE']
SAMPLING_RATE = config["SAMPLING_RATE"]
T_START = config["T_START"]
T_STOP = config["T_STOP"]
DIM_X = config["DIM_X"]
DIM_Y = config["DIM_Y"]

ORIENTATION_TOP = get_param(config, "ORIENTATION_TOP")
ORIENTATION_RIGHT = get_param(config, "ORIENTATION_RIGHT")
ANNOTATIONS = ordereddict_to_dict(config["ANNOTATIONS"])
ARRAY_ANNOTATIONS = ordereddict_to_dict(config["ARRAY_ANNOTATIONS"])
KWARGS = ordereddict_to_dict(config["KWARGS"])
TRIAL = get_param(config, "TRIAL")

wildcard_constraints:
    data_name = '\w+'

localrules: all, check_input

def input_file(wildcards):
    return DATA_SETS[wildcards.data_name]

rule all:
    input:
        data = expand(os.path.join(OUTPUT_DIR, '{data_name}',
                                   '{data_name}.'+NEO_FORMAT),
                      data_name = DATA_SETS.keys()),
        img = expand(os.path.join(OUTPUT_DIR, '{data_name}',
                                   'trace_{data_name}.'+PLOT_FORMAT),
                      data_name = DATA_SETS.keys()),
        check = expand(os.path.join(OUTPUT_DIR, '{data_name}.check'),
                       data_name = DATA_SETS.keys()),
        # configfile = os.path.join('configs', f'config_{PROFILE}.yaml')
    params:
        command = 'ln -s' if USE_LINK_AS_STAGE_OUTPUT else 'cp'
    output:
        os.path.join(OUTPUT_DIR, STAGE_OUTPUT)
    shell:
        """
        {params.command} "{input.data[0]}" "{output}"
        """

rule check_input:
    priority: 10
    input:
        data = os.path.join('{dir}', '{data_name}', '{data_name}.'+NEO_FORMAT),
        script = os.path.join('scripts', 'check_input.py')
    output:
        temp(os.path.join('{dir}', '{data_name}.check'))
    shell:
        """
        {ADD_UTILS}
        python {input.script} --data "{input.data}"
        touch "{output}"
        """

rule plot_traces:
    input:
        data = os.path.join('{dir}', '{data_name}', '{data_name}.'+NEO_FORMAT),
        script = os.path.join('scripts', 'plot_traces.py')
    params:
        plot_tstart = PLOT_TSTART,
        plot_tstop = PLOT_TSTOP,
        plot_channels = PLOT_CHANNELS
    output:
        img = report(os.path.join('{dir}', '{data_name}', 'trace_{data_name}.'+PLOT_FORMAT))
    shell:
        """
        {ADD_UTILS}
        python {input.script} --data "{input.data}" \
                              --output "{output.img}" \
                              --t_start {params.plot_tstart} \
                              --t_stop {params.plot_tstop} \
                              --channels {params.plot_channels}
        """

rule enter_data:
    input:
        data = input_file,
        script = os.path.join('scripts', CURATION_SCRIPT),
    params:
        spatial_scale = SPATIAL_SCALE,
        sampling_rate = SAMPLING_RATE,
        t_start = T_START,
        t_stop = T_STOP,
        dim_x = DIM_Y,
        dim_y = DIM_X,
        orientation_top = ORIENTATION_TOP,
        orientation_right = ORIENTATION_RIGHT,
        annotations = ANNOTATIONS,
        array_annotations = ARRAY_ANNOTATIONS,
        kwargs = KWARGS,
        trial = TRIAL
    output:
        data = os.path.join('{dir}', '{data_name}', '{data_name}.'+NEO_FORMAT)
    shell:
        """
        {ADD_UTILS}
        python {input.script} --data "{input.data}" \
                              --output "{output.data}" \
                              --data_name {wildcards.data_name} \
                              --sampling_rate {params.sampling_rate} \
                              --spatial_scale {params.spatial_scale} \
                              --t_start {params.t_start} \
                              --t_stop {params.t_stop} \
                              --dim_y {params.dim_x} \
                              --dim_x {params.dim_y} \
                              --orientation_top {params.orientation_top} \
                              --orientation_right {params.orientation_right} \
                              --annotations {params.annotations} \
                              --array_annotations {params.array_annotations} \
                              --kwargs {params.kwargs} \
                              --trial {params.trial}
        """
