### configuration for the preprocessing of calcium imaging data

# Path to folder containing the images
# to appended to data_path and created in output_path (see settings.py)
IMG_PATH: 'LENS/170110_mouse2_deep/t1'
# Images must be in .tiff format!
# Regex to find frame number in image name
FRAME_NUM_REGEX: '(?<=_)([0-9]+)'
# dimension of new 'macro-pixel' after the spacial smoothing
MACRO_PIXEL_DIM: 2
# normalize each pixel with respect to 'median', 'max', or 'None' of time series
NORMALIZE_BY: 'max'
# time rate of the acquisition process (in Hz)
SAMPLING_RATE: 25
# first frame number
FRAME_START: 1
# last frame number
FRAME_STOP: 250
# side length of one pixel in the image
PIXEL_SIZE: 0.05 #mm
# format for saving plots and images
SAVE_IMAGE_FORMAT: 'png'

#Contour_Limit is the input parameter of the 'find_contours' function in the measure.find_contours module of the scikit-image Python package, https://scikit-image.org.
# If 'None', the limit can be set interactively by the user.
CONTOUR_LIMIT: 0.197
# Id of the frame used to determine the contour and mask
CONTOUR_FRAME: 1

#FILTER_TYPE: 'Butterworth'
# Butterworth order
BUTTER_ORDER: 6
# lowcut: lowcut of the Butterworth filter. If not sure of this number type None
BUTTER_LOWCUT: 0.5
#highcut: highcut of the Butterworth filter. If not sure of this number type None
BUTTER_HIGHCUT: 3.0

# Detection of Up transitions
# Threshold for minima to be considered transitions
MINIMA_THRESHOLD: 0
# Window size (in sample points) around minimum
# to use for quadratic interpolation
MINIMA_WINDOWSIZE: 8

# value of phase of the hilbert transform where to define the up transition
# needs to be negative, since it preceeds a peak (pos. zero-crossing)
# e.g -pi = -3.141593, or -pi/2 = -1.570796
TRANSITION_PHASE: -1.570796
